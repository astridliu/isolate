fg = #000
fg-faded = #ddd
modal-fg = #bbb
modal-fg-bright = #fff
bg = #fff

nightmode-fg = #fff
nightmode-fg-faded = #333
nightmode-modal-fg = #bbb
nightmode-modal-fg-bright = #fff
nightmode-bg = #1c1c21

colw = 200px
header-padding = 0 40px 30px
image-gap = 4px
body-padding = image-gap 0 0 0

@require 'src/css/toolbar.styl'
@require 'src/css/modal.styl'

// Fonts

@font-face {
    font-family: 'inconsolata_packaged';
    src: url('../assets/fonts/Inconsolata/Inconsolata-Regular.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
}

@font-face {
    font-family: 'inconsolata_packaged';
    src: url('../assets/fonts/Inconsolata/Inconsolata-Bold.ttf') format('truetype');
    font-weight: bold;
    font-style: normal;
}

* {
  box-sizing: border-box;
  // Disabling dragging, add on a case by case basis
  // -webkit-app-region: no-drag;
  
  // Seems necessary for geometricPercision text rendering, maybe because of transitions?
  // https://stackoverflow.com/questions/32724159/issues-with-geometricprecision-in-chrome
  backface-visibility: hidden;
}

/* 
 * Frameless Electron windows arenâ€™t draggable. Here we make everything
 * undraggable, and then explicitly allow dragging on the body. This results in
 * only the top bar (where the traffic light buttons are) being used as a drag
 * handle for the entire window */
 */

body {
  -webkit-app-region: drag;
  font-family: 'inconsolata_packaged', Inconsolata, monospace;
  font-size: 14px;
  line-height: 1.4em;
  padding: body-padding;
  margin: 0;
  text-rendering: geometricPrecision;
}

/* Light/Dark mode handled by a class ontop of body, define all colors here
 * It appears like args to colors shadow the global variable names
 */
colors(fg, fg-faded, modal-fg, modal-fg-bright, bg)
  background: bg
  color: fg

  a {
    color: fg;
  }

  input {
    background: bg;
    color: fg;
    border-bottom: 1px solid fg;
  }

  .main-header {
    background: bg;
    color: fg;

    .toolbar {
      border-top: 1px solid fg-faded;
    }
  }

  nav.enabled {
    border-top: 1px solid fg-faded;
  }

  .modal-zoomed {
    header {
      color: rgba(0,0,0,0)
    }
    header:hover {
      color: modal-fg;
    }
  }

  .modal-unzoomed {
    header {
      color: modal-fg;
    }
  }

  .modal-controls {
    span:hover, span:focus {
      color: modal-fg-bright;
    }
  }

  .toolbar .center a:hover {
    color: fg-faded;
  }

  .popup {
    background: bg;

    .menu-item {
      border-top: 1px solid fg-faded;
    }

    .menu-item:hover {
      background: fg-faded;
    }
  }
  .popup:after{
    background: bg;
  }
  .popup:before{
    border-top-color: bg;
  }

body {
  colors(fg, fg-faded, modal-fg, modal-fg-bright, bg)
}

body.nightmode {
  colors(nightmode-fg, nightmode-fg-faded, nightmode-modal-fg, nightmode-modal-fg-bright, nightmode-bg)
}

.images-container {
  margin-right: image-gap; // balance edge padding
  display: flex;
  flex-direction: row;
  padding-bottom: toolbar-height;
}

.image-column {
  flex-basis: colw;
  flex-grow: 1;
  padding-left: image-gap;
}

.iw {
  width: 100%;
  margin-bottom: image-gap;
}

// Selected images get amber overlay
// use ::after to cover with semi-opaque box
.selected {
  position: relative;
}
.selected::after {
  content: '';
  background: rgba(255,192,20,0.5);
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  pointer-events: none;
}

.images-container img {
  width: 100%;
  display: block; // remove padding below image
  pointer-events: auto;
}
